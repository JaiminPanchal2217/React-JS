{"ast":null,"code":"// cartSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst storeInLocalStorage = data => {\n  localStorage.setItem(\"cart\", JSON.stringify(data));\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    data: [],\n    totalItems: 0,\n    totalAmount: 0,\n    deliverCharge: 10\n  },\n  reducers: {\n    addToCart(state, action) {\n      const existingProduct = state.data.find(product => product.id === action.payload.id);\n      if (existingProduct) {\n        const tempCart = state.data.map(product => {\n          if (product.id === action.payload.id) {\n            let newQty = product.quantity + action.payload.quantity;\n            let newTotalPrice = newQty * product.price;\n            return {\n              ...product,\n              quantity: newQty,\n              totalPrice: newTotalPrice\n            };\n          } else {\n            return product;\n          }\n        });\n        state.data = tempCart;\n        storeInLocalStorage(state.data);\n      } else {\n        state.data.push(action.payload);\n        storeInLocalStorage(state.data);\n      }\n    },\n    updateQuantity: (state, action) => {\n      const {\n        id,\n        quantity\n      } = action.payload;\n      const productToUpdate = state.data.find(product => product.id === id);\n      if (productToUpdate) {\n        const validQuantity = Math.max(quantity || 1, 1);\n        productToUpdate.quantity = validQuantity;\n        productToUpdate.totalPrice = productToUpdate.price * quantity;\n      }\n    },\n    removeItem(state, action) {\n      const tempCart = state.data.filter(product => product.id !== action.payload.id);\n      state.data = tempCart;\n      storeInLocalStorage(state.data);\n    },\n    getCartTotal(state) {\n      state.totalAmount = state.data.reduce((cartTotal, cartItem) => {\n        return cartTotal += cartItem.totalPrice;\n      }, 0);\n      state.totalItems = state.data.length;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeItem,\n  getCartTotal,\n  updateQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","storeInLocalStorage","data","localStorage","setItem","JSON","stringify","cartSlice","name","initialState","totalItems","totalAmount","deliverCharge","reducers","addToCart","state","action","existingProduct","find","product","id","payload","tempCart","map","newQty","quantity","newTotalPrice","price","totalPrice","push","updateQuantity","productToUpdate","validQuantity","Math","max","removeItem","filter","getCartTotal","reduce","cartTotal","cartItem","length","actions","reducer"],"sources":["/Users/jaiminkumarpanchal/Desktop/TOPS/React-JS-Project/food-aap2209/src/store/cartSlice.js"],"sourcesContent":["// cartSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst storeInLocalStorage = (data) => {\n  localStorage.setItem(\"cart\", JSON.stringify(data));\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    data: [],\n    totalItems: 0,\n    totalAmount: 0,\n    deliverCharge: 10,\n  },\n  reducers: {\n    addToCart(state, action) {\n      const existingProduct = state.data.find(\n        (product) => product.id === action.payload.id\n      );\n\n      if (existingProduct) {\n        const tempCart = state.data.map((product) => {\n          if (product.id === action.payload.id) {\n            let newQty = product.quantity + action.payload.quantity;\n            let newTotalPrice = newQty * product.price;\n            return {\n              ...product,\n              quantity: newQty,\n              totalPrice: newTotalPrice,\n            };\n          } else {\n            return product;\n          }\n        });\n\n        state.data = tempCart;\n        storeInLocalStorage(state.data);\n      } else {\n        state.data.push(action.payload);\n        storeInLocalStorage(state.data);\n      }\n    },\n\n    updateQuantity: (state, action) => {\n      const { id, quantity } = action.payload;\n      const productToUpdate = state.data.find((product) => product.id === id);\n\n      if (productToUpdate) {\n        const validQuantity = Math.max(quantity || 1, 1);\n        productToUpdate.quantity = validQuantity;\n        productToUpdate.totalPrice = productToUpdate.price * quantity;\n      }\n    },\n\n    removeItem(state, action) {\n      const tempCart = state.data.filter(\n        (product) => product.id !== action.payload.id\n      );\n      state.data = tempCart;\n      storeInLocalStorage(state.data);\n    },\n    getCartTotal(state) {\n      state.totalAmount = state.data.reduce((cartTotal, cartItem) => {\n        return (cartTotal += cartItem.totalPrice);\n      }, 0);\n      state.totalItems = state.data.length;\n    },\n  },\n});\n\nexport const { addToCart, removeItem, getCartTotal, updateQuantity } =\n  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}