{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userReducer = createSlice({\n  name: \"products\",\n  initialState: [],\n  reducers: {\n    userData: (state, action) => {\n      state.push(action.payload);\n    },\n    addData: (state, action) => {\n      fetch('http://localhost:3001/Products', {\n        method: \"post\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(action.payload)\n      }).then(res => {\n        if (res) {\n          alert('Saved Successfully...!');\n        }\n      }).catch(error => {\n        return error.message;\n      });\n    },\n    editData: (state, action) => {\n      if (window.confirm(\"Are you sure for edit\")) {\n        fetch(`http://localhost:3001/Products/${action.payload.id}`, {\n          method: \"put\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(action.payload)\n        }).then(res => {\n          if (res) {\n            alert('Edit Successfully...!');\n          }\n        }).catch(error => {\n          return error.message;\n        });\n      }\n    },\n    deleteData: (state, action) => {\n      if (window.confirm(\"Are you sure for delete\")) {\n        fetch(`http://localhost:3001/products/${action.payload}`, {\n          method: \"delete\"\n        }).then(res => {\n          if (res) {\n            alert('Delete Successfully...!');\n          }\n        }).catch(error => {\n          return error.message;\n        });\n      }\n    }\n  }\n});\nexport const {\n  userData,\n  addData,\n  editData,\n  deleteData\n} = userReducer.actions;\nexport default userReducer.reducer;","map":{"version":3,"names":["createSlice","userReducer","name","initialState","reducers","userData","state","action","push","payload","addData","fetch","method","headers","body","JSON","stringify","then","res","alert","catch","error","message","editData","window","confirm","id","deleteData","actions","reducer"],"sources":["/Users/jaiminkumarpanchal/Desktop/TOPS/React JS_REDUXS/json-server/src/userReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userReducer = createSlice({\r\n    name: \"products\",\r\n    initialState: [],\r\n    reducers: {\r\n        userData: (state, action) => {\r\n            state.push(action.payload)\r\n        },\r\n\r\n        addData: (state, action) => {\r\n            fetch('http://localhost:3001/Products', {\r\n                method: \"post\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(action.payload)\r\n            })\r\n                .then((res) => {\r\n                    if (res) {\r\n                        alert('Saved Successfully...!')\r\n                    }\r\n                })\r\n                .catch((error) => { return error.message })\r\n        },\r\n\r\n        editData: (state, action) => {\r\n            if (window.confirm(\"Are you sure for edit\")) {\r\n                fetch(`http://localhost:3001/Products/${action.payload.id}`, {\r\n                    method: \"put\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(action.payload)\r\n                })\r\n                    .then((res) => {\r\n                        if (res) {\r\n                            alert('Edit Successfully...!')\r\n                        }\r\n                    })\r\n                    .catch((error) => { return error.message })\r\n            }\r\n        },\r\n        deleteData: (state, action) => {\r\n            if (window.confirm(\"Are you sure for delete\")) {\r\n                fetch(`http://localhost:3001/products/${action.payload}`, {\r\n                    method: \"delete\",\r\n                }).then((res) => {\r\n                    if (res) {\r\n                        alert('Delete Successfully...!')\r\n                    }\r\n                })\r\n                .catch((error) => { return error.message })\r\n            }\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const { userData, addData, editData, deleteData } = userReducer.actions;\r\nexport default userReducer.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IAEDC,OAAO,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxBI,KAAK,CAAC,gCAAgC,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,MAAM,CAACE,OAAO;MACvC,CAAC,CAAC,CACGQ,IAAI,CAAEC,GAAG,IAAK;QACX,IAAIA,GAAG,EAAE;UACLC,KAAK,CAAC,wBAAwB,CAAC;QACnC;MACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAAE,OAAOA,KAAK,CAACC,OAAO;MAAC,CAAC,CAAC;IACnD,CAAC;IAEDC,QAAQ,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACzB,IAAIiB,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC,EAAE;QACzCd,KAAK,CAAE,kCAAiCJ,MAAM,CAACE,OAAO,CAACiB,EAAG,EAAC,EAAE;UACzDd,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,MAAM,CAACE,OAAO;QACvC,CAAC,CAAC,CACGQ,IAAI,CAAEC,GAAG,IAAK;UACX,IAAIA,GAAG,EAAE;YACLC,KAAK,CAAC,uBAAuB,CAAC;UAClC;QACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;UAAE,OAAOA,KAAK,CAACC,OAAO;QAAC,CAAC,CAAC;MACnD;IACJ,CAAC;IACDK,UAAU,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK;MAC3B,IAAIiB,MAAM,CAACC,OAAO,CAAC,yBAAyB,CAAC,EAAE;QAC3Cd,KAAK,CAAE,kCAAiCJ,MAAM,CAACE,OAAQ,EAAC,EAAE;UACtDG,MAAM,EAAE;QACZ,CAAC,CAAC,CAACK,IAAI,CAAEC,GAAG,IAAK;UACb,IAAIA,GAAG,EAAE;YACLC,KAAK,CAAC,yBAAyB,CAAC;UACpC;QACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;UAAE,OAAOA,KAAK,CAACC,OAAO;QAAC,CAAC,CAAC;MAC/C;IACJ;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEjB,QAAQ;EAAEK,OAAO;EAAEa,QAAQ;EAAEI;AAAW,CAAC,GAAG1B,WAAW,CAAC2B,OAAO;AAC9E,eAAe3B,WAAW,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}